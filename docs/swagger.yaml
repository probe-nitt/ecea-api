definitions:
  models.Error:
    properties:
      code:
        example: 0
        type: integer
      message:
        example: status
        type: string
    type: object
  models.MemberRoles:
    enum:
    - Chairperson
    - Overall Coordinator(Boys)
    - Overall Coordinator(Girls)
    - Treasurer
    - Head
    - Deputy Head
    - Manager
    - Coordinator
    type: string
    x-enum-varnames:
    - Chairperson
    - OCBoy
    - OCGirl
    - Treasurer
    - Head
    - DeputyHead
    - Manager
    - Coordinator
  models.MemberTeams:
    enum:
    - Webops
    - Events
    type: string
    x-enum-varnames:
    - Webops
    - Events
  models.Members:
    properties:
      image_url:
        type: string
      name:
        type: string
      role:
        $ref: '#/definitions/models.MemberRoles'
      rollnumber:
        type: string
      team:
        $ref: '#/definitions/models.MemberTeams'
    type: object
  models.RegisterRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  models.RegisterResponse:
    properties:
      message:
        type: string
    type: object
  models.StudyMaterials:
    properties:
      document_url:
        type: string
      name:
        type: string
      subject:
        type: string
      subject_category:
        type: string
      subjectCode:
        type: string
    type: object
info:
  contact:
    email: probe.eceanitt@gmail.com
    name: Probe Webops
  description: Admin Panel for Probe Application.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Probe Admin
  version: "1.0"
paths:
  /v1/studymaterial/add:
    post:
      consumes:
      - multipart/form-data
      description: Creates a new study material and adds to Database
      parameters:
      - description: Enter material name
        in: formData
        name: name
        required: true
        type: string
      - description: Enter subject name
        in: formData
        name: subject
        required: true
        type: string
      - description: Enter subject code
        in: formData
        name: code
        required: true
        type: string
      - description: Choose a category
        enum:
        - DIGITAL ELECTRONICS
        - ANALOG ELECTRONICS
        - TELECOMMUNICATION
        - COMMUNICATION CHANNELING
        - SYSTEM DESIGN AND ARCHITECTURE
        - BASIC ENGINEERING
        - MATHEMATICS
        - OTHERS
        in: formData
        name: category
        required: true
        type: string
      - description: Upload Document
        in: formData
        name: document
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Add a study material
      tags:
      - StudyMaterial
  /v1/studymaterial/delete/{name}:
    delete:
      consumes:
      - application/json
      description: Deletes a study material along with its document and remove form
        Database
      parameters:
      - description: Delete study material
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Deletes a study material
      tags:
      - StudyMaterial
  /v1/studymaterial/edit/document:
    put:
      consumes:
      - multipart/form-data
      description: Update a document and update it on Database
      parameters:
      - description: Enter the name of material
        in: formData
        name: name
        required: true
        type: string
      - description: Edit Document
        in: formData
        name: document
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Update a study material's document
      tags:
      - StudyMaterial
  /v1/studymaterial/edit/subject:
    put:
      consumes:
      - multipart/form-data
      description: Updates a subject name and updates to Database
      parameters:
      - description: Edit name
        in: formData
        name: subject
        required: true
        type: string
      - description: Enter subject code
        in: formData
        name: subjectCode
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Updates a studymaterial's subject name
      tags:
      - StudyMaterial
  /v1/studymaterial/get/{name}:
    get:
      consumes:
      - application/json
      description: Fetches a study material and removes form database
      parameters:
      - description: Get study material
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.StudyMaterials'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Get a study material
      tags:
      - StudyMaterial
  /v1/studymaterial/getcat/{category}:
    get:
      consumes:
      - application/json
      description: Fetches all study materials belonging to a category from Database
      parameters:
      - description: Get study material from category
        enum:
        - DIGITAL ELECTRONICS
        - ANALOG ELECTRONICS
        - TELECOMMUNICATION
        - COMMUNICATION CHANNELING
        - SYSTEM DESIGN AND ARCHITECTURE
        - BASIC ENGINEERING
        - MATHEMATICS
        - OTHERS
        in: path
        name: category
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.StudyMaterials'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Get study materials from a categroy
      tags:
      - StudyMaterial
  /v1/team/add:
    post:
      consumes:
      - multipart/form-data
      description: Creates a new member and adds to Database
      parameters:
      - description: Enter name
        in: formData
        name: name
        required: true
        type: string
      - description: Enter roll no
        in: formData
        name: rollnumber
        required: true
        type: string
      - description: Choose a role
        enum:
        - Chairperson
        - Overall Coordinator(Boys)
        - Overall Coordinator(Girls)
        - Treasurer
        - Head
        - Deputy Head
        - Manager
        - Coordinator
        in: formData
        name: role
        required: true
        type: string
      - description: Choose a team
        enum:
        - Webops
        - Events
        in: formData
        name: team
        required: true
        type: string
      - description: Upload Image
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Add a team member
      tags:
      - Team
  /v1/team/delete/{rollnumber}:
    delete:
      consumes:
      - application/json
      description: Deletes a member and remove form Database
      parameters:
      - description: Delete member
        in: path
        name: rollnumber
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Delete a team member
      tags:
      - Team
  /v1/team/edit/image:
    put:
      consumes:
      - multipart/form-data
      description: Edits a member and updates to Database
      parameters:
      - description: Enter roll no
        in: formData
        name: rollnumber
        required: true
        type: string
      - description: Edit Image
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Edit a team member's image
      tags:
      - Team
  /v1/team/edit/name:
    put:
      consumes:
      - multipart/form-data
      description: Edits a member and updates to Database
      parameters:
      - description: Edit name
        in: formData
        name: name
        required: true
        type: string
      - description: Enter roll no
        in: formData
        name: rollnumber
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Edit a team member's name
      tags:
      - Team
  /v1/team/edit/role:
    put:
      consumes:
      - multipart/form-data
      description: Edits a member and updates to Database
      parameters:
      - description: Enter roll no
        in: formData
        name: rollnumber
        required: true
        type: string
      - description: Change role
        enum:
        - Chairperson
        - Overall Coordinator(Boys)
        - Overall Coordinator(Girls)
        - Treasurer
        - Head
        - Deputy Head
        - Manager
        - Coordinator
        in: formData
        name: role
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Edit a team member's role
      tags:
      - Team
  /v1/team/edit/team:
    put:
      consumes:
      - multipart/form-data
      description: Edits a member and updates to Database
      parameters:
      - description: Enter roll no
        in: formData
        name: rollnumber
        required: true
        type: string
      - description: Change team
        enum:
        - Webops
        - Events
        in: formData
        name: team
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Edit a team member's team
      tags:
      - Team
  /v1/team/get/{rollnumber}:
    get:
      consumes:
      - application/json
      description: Fetches a member and remove form Database
      parameters:
      - description: Get member
        in: path
        name: rollnumber
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Members'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      summary: Get a team member
      tags:
      - Team
  /v1/team/getall:
    get:
      consumes:
      - application/json
      description: Fetches all the team members from Database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Members'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      summary: Get all team members
      tags:
      - Team
  /v1/user/signup:
    post:
      consumes:
      - application/json
      description: register an user
      parameters:
      - description: Add user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RegisterResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      summary: Register an user
      tags:
      - User
  /v1/user/verifyemail/{verificationCode}:
    post:
      consumes:
      - application/json
      description: verify an user by sending email
      parameters:
      - description: Verify user
        in: path
        name: verificationCode
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      summary: verify an user
      tags:
      - User
securityDefinitions:
  ApiKeyAuth:
    description: Description for what is this security definition being used
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"

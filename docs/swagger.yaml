definitions:
  models.Error:
    properties:
      code:
        example: 0
        type: integer
      message:
        example: status
        type: string
    type: object
  models.MemberRoles:
    enum:
    - Chairperson
    - Overall Coordinator(Boys)
    - Overall Coordinator(Girls)
    - Treasurer
    - Head
    - Deputy Head
    - Manager
    - Coordinator
    type: string
    x-enum-varnames:
    - Chairperson
    - OCBoy
    - OCGirl
    - Treasurer
    - Head
    - DeputyHead
    - Manager
    - Coordinator
  models.MemberTeams:
    enum:
    - Webops
    - Events
    type: string
    x-enum-varnames:
    - Webops
    - Events
  models.Members:
    properties:
      image_url:
        type: string
      name:
        type: string
      role:
        $ref: '#/definitions/models.MemberRoles'
      rollnumber:
        type: string
      team:
        $ref: '#/definitions/models.MemberTeams'
    type: object
  models.PodcastType:
    enum:
    - GUEST_LECTURE
    - CAREER_PATH
    type: string
    x-enum-varnames:
    - Guestlecture
    - CareerPath
  models.Podcasts:
    properties:
      description:
        type: string
      image_url:
        type: string
      mediaUrl:
        type: string
      name:
        type: string
      type:
        $ref: '#/definitions/models.PodcastType'
    type: object
  models.RegisterRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  models.RegisterResponse:
    properties:
      message:
        type: string
    type: object
info:
  contact:
    email: probe.eceanitt@gmail.com
    name: Probe Webops
  description: Admin Panel for Probe Application.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Probe Admin
  version: "1.0"
paths:
  /v1/podcast/create:
    post:
      consumes:
      - multipart/form-data
      description: Adds a new podcast to the database
      parameters:
      - description: Enter name
        in: formData
        name: name
        required: true
        type: string
      - description: Enter episode number
        in: formData
        name: episodeNo
        required: true
        type: integer
      - description: Choose a type
        enum:
        - GUEST_LECTURE
        - CAREER_PATH
        in: formData
        name: type
        required: true
        type: string
      - description: Enter description
        in: formData
        name: description
        required: true
        type: string
      - description: Enter Media URL
        in: formData
        name: mediaURL
        required: true
        type: string
      - description: Upload Thumbnail
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Create Podcast
      tags:
      - Podcast
  /v1/podcast/delete:
    delete:
      consumes:
      - multipart/form-data
      description: Deletes a podcast
      parameters:
      - description: Enter episode number
        in: formData
        name: episodeNo
        required: true
        type: integer
      - description: Choose a type
        enum:
        - GUEST_LECTURE
        - CAREER_PATH
        in: formData
        name: type
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Delete Podcast
      tags:
      - Podcast
  /v1/podcast/edit/description:
    put:
      consumes:
      - multipart/form-data
      description: Edits the description of a podcast
      parameters:
      - description: Enter episode number
        in: formData
        name: episodeNo
        required: true
        type: integer
      - description: Choose a type
        enum:
        - GUEST_LECTURE
        - CAREER_PATH
        in: formData
        name: type
        required: true
        type: string
      - description: Enter description
        in: formData
        name: description
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Edit Description
      tags:
      - Podcast
  /v1/podcast/edit/thumbnail:
    put:
      consumes:
      - multipart/form-data
      description: Edits the thumbnail of a podcast
      parameters:
      - description: Enter episode number
        in: formData
        name: episodeNo
        required: true
        type: integer
      - description: Choose a type
        enum:
        - GUEST_LECTURE
        - CAREER_PATH
        in: formData
        name: type
        required: true
        type: string
      - description: Upload Thumbnail
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Edit Thumbnail
      tags:
      - Podcast
  /v1/podcast/edit/url:
    put:
      consumes:
      - multipart/form-data
      description: Edits the media url of a podcast
      parameters:
      - description: Enter episode number
        in: formData
        name: episodeNo
        required: true
        type: integer
      - description: Choose a type
        enum:
        - GUEST_LECTURE
        - CAREER_PATH
        in: formData
        name: type
        required: true
        type: string
      - description: Enter Media URL
        in: formData
        name: mediaURL
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Edit URL
      tags:
      - Podcast
  /v1/podcast/get/{episodeNo}/{type}:
    get:
      consumes:
      - application/json
      description: Gets a podcast by episode number and type
      parameters:
      - description: Enter episode number
        in: path
        name: episodeNo
        required: true
        type: integer
      - description: Choose a type
        enum:
        - GUEST_LECTURE
        - CAREER_PATH
        in: path
        name: type
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Podcasts'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Get Podcast By Episode Number And Type
      tags:
      - Podcast
  /v1/podcast/get/all:
    get:
      consumes:
      - application/json
      description: Gets all podcasts
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Podcasts'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      summary: Get All Podcasts
      tags:
      - Podcast
  /v1/podcast/getall/{type}:
    get:
      consumes:
      - application/json
      description: Gets a podcast by type
      parameters:
      - description: Enter type
        in: path
        name: type
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Podcasts'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      summary: Get Podcast By Type
      tags:
      - Podcast
  /v1/team/add:
    post:
      consumes:
      - multipart/form-data
      description: Creates a new member and adds to Database
      parameters:
      - description: Enter name
        in: formData
        name: name
        required: true
        type: string
      - description: Enter roll no
        in: formData
        name: rollnumber
        required: true
        type: string
      - description: Choose a role
        enum:
        - Chairperson
        - Overall Coordinator(Boys)
        - Overall Coordinator(Girls)
        - Treasurer
        - Head
        - Deputy Head
        - Manager
        - Coordinator
        in: formData
        name: role
        required: true
        type: string
      - description: Choose a team
        enum:
        - Webops
        - Events
        in: formData
        name: team
        required: true
        type: string
      - description: Upload Image
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Add a team member
      tags:
      - Team
  /v1/team/delete/{rollnumber}:
    delete:
      consumes:
      - application/json
      description: Deletes a member and remove form Database
      parameters:
      - description: Delete member
        in: path
        name: rollnumber
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Delete a team member
      tags:
      - Team
  /v1/team/edit/image:
    put:
      consumes:
      - multipart/form-data
      description: Edits a member and updates to Database
      parameters:
      - description: Enter roll no
        in: formData
        name: rollnumber
        required: true
        type: string
      - description: Edit Image
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Edit a team member's image
      tags:
      - Team
  /v1/team/edit/name:
    put:
      consumes:
      - multipart/form-data
      description: Edits a member and updates to Database
      parameters:
      - description: Edit name
        in: formData
        name: name
        required: true
        type: string
      - description: Enter roll no
        in: formData
        name: rollnumber
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Edit a team member's name
      tags:
      - Team
  /v1/team/edit/role:
    put:
      consumes:
      - multipart/form-data
      description: Edits a member and updates to Database
      parameters:
      - description: Enter roll no
        in: formData
        name: rollnumber
        required: true
        type: string
      - description: Change role
        enum:
        - Chairperson
        - Overall Coordinator(Boys)
        - Overall Coordinator(Girls)
        - Treasurer
        - Head
        - Deputy Head
        - Manager
        - Coordinator
        in: formData
        name: role
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Edit a team member's role
      tags:
      - Team
  /v1/team/edit/team:
    put:
      consumes:
      - multipart/form-data
      description: Edits a member and updates to Database
      parameters:
      - description: Enter roll no
        in: formData
        name: rollnumber
        required: true
        type: string
      - description: Change team
        enum:
        - Webops
        - Events
        in: formData
        name: team
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Edit a team member's team
      tags:
      - Team
  /v1/team/get/{rollnumber}:
    get:
      consumes:
      - application/json
      description: Fetches a member and remove form Database
      parameters:
      - description: Get member
        in: path
        name: rollnumber
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Members'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      summary: Get a team member
      tags:
      - Team
  /v1/team/getall:
    get:
      consumes:
      - application/json
      description: Fetches all the team members from Database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Members'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      summary: Get all team members
      tags:
      - Team
  /v1/user/signup:
    post:
      consumes:
      - application/json
      description: register an user
      parameters:
      - description: Add user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RegisterResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      summary: Register an user
      tags:
      - User
  /v1/user/verifyemail/{verificationCode}:
    post:
      consumes:
      - application/json
      description: verify an user by sending email
      parameters:
      - description: Verify user
        in: path
        name: verificationCode
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      summary: verify an user
      tags:
      - User
securityDefinitions:
  ApiKeyAuth:
    description: Description for what is this security definition being used
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"

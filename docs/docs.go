// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Probe Webops",
            "email": "probe.eceanitt@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/podcast/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Adds a new podcast to the database",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Podcast"
                ],
                "summary": "Create Podcast",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Enter episode number",
                        "name": "episodeNo",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "enum": [
                            "GUEST_LECTURE",
                            "CAREER_PATH"
                        ],
                        "type": "string",
                        "description": "Choose a type",
                        "name": "type",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Enter description",
                        "name": "description",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Enter Media URL",
                        "name": "mediaURL",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Upload Thumbnail",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/v1/podcast/delete": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes a podcast",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Podcast"
                ],
                "summary": "Delete Podcast",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Enter episode number",
                        "name": "episodeNo",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "enum": [
                            "GUEST_LECTURE",
                            "CAREER_PATH"
                        ],
                        "type": "string",
                        "description": "Choose a type",
                        "name": "type",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/v1/podcast/edit/description": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Edits the description of a podcast",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Podcast"
                ],
                "summary": "Edit Description",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Enter episode number",
                        "name": "episodeNo",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "enum": [
                            "GUEST_LECTURE",
                            "CAREER_PATH"
                        ],
                        "type": "string",
                        "description": "Choose a type",
                        "name": "type",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Enter description",
                        "name": "description",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/v1/podcast/edit/thumbnail": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Edits the thumbnail of a podcast",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Podcast"
                ],
                "summary": "Edit Thumbnail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Enter episode number",
                        "name": "episodeNo",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "enum": [
                            "GUEST_LECTURE",
                            "CAREER_PATH"
                        ],
                        "type": "string",
                        "description": "Choose a type",
                        "name": "type",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Upload Thumbnail",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/v1/podcast/edit/url": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Edits the media url of a podcast",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Podcast"
                ],
                "summary": "Edit URL",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Enter episode number",
                        "name": "episodeNo",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "enum": [
                            "GUEST_LECTURE",
                            "CAREER_PATH"
                        ],
                        "type": "string",
                        "description": "Choose a type",
                        "name": "type",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Enter Media URL",
                        "name": "mediaURL",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/v1/team/add": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new member and adds to Database",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Team"
                ],
                "summary": "Add a team member",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Enter roll no",
                        "name": "rollnumber",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "enum": [
                            "Chairperson",
                            "Overall Coordinator(Boys)",
                            "Overall Coordinator(Girls)",
                            "Treasurer",
                            "Head",
                            "Deputy Head",
                            "Manager",
                            "Coordinator"
                        ],
                        "type": "string",
                        "description": "Choose a role",
                        "name": "role",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "enum": [
                            "Webops",
                            "Events"
                        ],
                        "type": "string",
                        "description": "Choose a team",
                        "name": "team",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Upload Image",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/v1/team/delete/{rollnumber}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes a member and remove form Database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Team"
                ],
                "summary": "Delete a team member",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Delete member",
                        "name": "rollnumber",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/v1/team/edit/image": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Edits a member and updates to Database",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Team"
                ],
                "summary": "Edit a team member's image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter roll no",
                        "name": "rollnumber",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Edit Image",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/v1/team/edit/name": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Edits a member and updates to Database",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Team"
                ],
                "summary": "Edit a team member's name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Edit name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Enter roll no",
                        "name": "rollnumber",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/v1/team/edit/role": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Edits a member and updates to Database",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Team"
                ],
                "summary": "Edit a team member's role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter roll no",
                        "name": "rollnumber",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "enum": [
                            "Chairperson",
                            "Overall Coordinator(Boys)",
                            "Overall Coordinator(Girls)",
                            "Treasurer",
                            "Head",
                            "Deputy Head",
                            "Manager",
                            "Coordinator"
                        ],
                        "type": "string",
                        "description": "Change role",
                        "name": "role",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/v1/team/edit/team": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Edits a member and updates to Database",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Team"
                ],
                "summary": "Edit a team member's team",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter roll no",
                        "name": "rollnumber",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "enum": [
                            "Webops",
                            "Events"
                        ],
                        "type": "string",
                        "description": "Change team",
                        "name": "team",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/v1/team/get/{rollnumber}": {
            "get": {
                "description": "Fetches a member and remove form Database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Team"
                ],
                "summary": "Get a team member",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Get member",
                        "name": "rollnumber",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Members"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/v1/team/getall": {
            "get": {
                "description": "Fetches all the team members from Database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Team"
                ],
                "summary": "Get all team members",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Members"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/v1/user/signup": {
            "post": {
                "description": "register an user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Register an user",
                "parameters": [
                    {
                        "description": "Add user",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.RegisterResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/v1/user/verifyemail/{verificationCode}": {
            "post": {
                "description": "verify an user by sending email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "verify an user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Verify user",
                        "name": "verificationCode",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 0
                },
                "message": {
                    "type": "string",
                    "example": "status"
                }
            }
        },
        "models.MemberRoles": {
            "type": "string",
            "enum": [
                "Chairperson",
                "Overall Coordinator(Boys)",
                "Overall Coordinator(Girls)",
                "Treasurer",
                "Head",
                "Deputy Head",
                "Manager",
                "Coordinator"
            ],
            "x-enum-varnames": [
                "Chairperson",
                "OCBoy",
                "OCGirl",
                "Treasurer",
                "Head",
                "DeputyHead",
                "Manager",
                "Coordinator"
            ]
        },
        "models.MemberTeams": {
            "type": "string",
            "enum": [
                "Webops",
                "Events"
            ],
            "x-enum-varnames": [
                "Webops",
                "Events"
            ]
        },
        "models.Members": {
            "type": "object",
            "properties": {
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/models.MemberRoles"
                },
                "rollnumber": {
                    "type": "string"
                },
                "team": {
                    "$ref": "#/definitions/models.MemberTeams"
                }
            }
        },
        "models.RegisterRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.RegisterResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "Description for what is this security definition being used",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Probe Admin",
	Description:      "Admin Panel for Probe Application.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
